@using Application.Accounts.Command
@using Web.Models.Profile
@inject ChangePasswordVMValidator Validator
@inject IMediator Mediator
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudForm @ref="form" Model="@model" Validation="@(Validator.ValidateValue)" ValidationDelay="0">
            <MudTextField T="string" Label="Current password" InputType="InputType.Password" @bind-Value="model.Password"
                          For="@(() => model.Password)" Variant="Variant.Outlined" Placeholder="Enter your current password" />
            <MudTextField T="string" Label="New password" InputType="InputType.Password" @bind-Value="model.NewPassword"
                          For="@(() => model.NewPassword)" Variant="Variant.Outlined" Placeholder="Enter your new password" />
            <MudTextField T="string" Label="Repeat new password" InputType="InputType.Password" @bind-Value="model.NewPassword2"
                          For="@(() => model.NewPassword2)" Variant="Variant.Outlined" Placeholder="Repeat your new password" />
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Update</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public int AccountId { get; set; }

    private ChangePasswordVM model = new();
    MudForm form = default!;

    private async Task Submit()
    {
        await form.Validate();
        if (form.IsValid)
        {
            try{
                var success = await Mediator.Send(new UpdatePasswordCommand(AccountId, model.Password!, model.NewPassword!));
                if (success)
                {
                    Snackbar.Add("Change password success", Severity.Success);
                }
                else
                {
                    throw new Exception("Change password failed");
                }
            } catch(Exception ex)
            {
                Snackbar.Add(ex.Message, Severity.Error);
            }
            finally
            {
                MudDialog.Close(DialogResult.Ok(true));
            }
        }
    }

    void Cancel() => MudDialog.Cancel();
}
